{
    "version": 3,
    "sources": [
        "../../../src/api/service/weixin.js"
    ],
    "names": [
        "crypto",
        "require",
        "md5",
        "moment",
        "rp",
        "fs",
        "http",
        "module",
        "exports",
        "think",
        "Service",
        "decryptUserInfoData",
        "sessionKey",
        "encryptedData",
        "iv",
        "_sessionKey",
        "Buffer",
        "from",
        "decoded",
        "decipher",
        "createDecipheriv",
        "setAutoPadding",
        "update",
        "final",
        "JSON",
        "parse",
        "err",
        "watermark",
        "appid",
        "config",
        "createUnifiedOrder",
        "payInfo",
        "WeiXinPay",
        "weixinpay",
        "openid",
        "mch_id",
        "partner_key",
        "Promise",
        "resolve",
        "reject",
        "body",
        "out_trade_no",
        "total_fee",
        "spbill_create_ip",
        "notify_url",
        "trade_type",
        "res",
        "console",
        "log",
        "return_code",
        "result_code",
        "returnParams",
        "parseInt",
        "Date",
        "now",
        "nonce_str",
        "prepay_id",
        "paramStr",
        "nonceStr",
        "package",
        "signType",
        "timeStamp",
        "paySign",
        "toUpperCase",
        "order_sn",
        "getTotalFee",
        "sn",
        "model",
        "where",
        "field",
        "find",
        "actual_price",
        "buildQuery",
        "queryObj",
        "sortPayOptions",
        "key",
        "Object",
        "keys",
        "sort",
        "payOptionQuery",
        "substring",
        "length",
        "signQuery",
        "queryStr",
        "md5Sign",
        "payNotify",
        "notifyData",
        "isEmpty",
        "notifyObj",
        "sign",
        "signString",
        "timeInfo",
        "time_end",
        "pay_time",
        "getTime",
        "createRefund",
        "getAccessToken",
        "options",
        "method",
        "url",
        "qs",
        "grant_type",
        "secret",
        "sessionData",
        "token",
        "access_token",
        "getSelfToken",
        "params",
        "timestamp",
        "nonce",
        "join",
        "sha1",
        "createHash",
        "a",
        "digest",
        "b",
        "signature",
        "sendMessage",
        "data",
        "sendInfo",
        "json",
        "posting",
        "getMessageATempId",
        "type",
        "getMessageTempId",
        "sendTextMessage",
        "touser",
        "FromUserName",
        "msgtype",
        "text",
        "content",
        "Content",
        "sendImageMessage",
        "media_id",
        "image"
    ],
    "mappings": "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",
    "file": "../../../src/api/service/weixin.js",
    "sourcesContent": [
        "const crypto = require('crypto');\nconst md5 = require('md5');\nconst moment = require('moment');\nconst rp = require('request-promise');\nconst fs = require('fs');\nconst http = require(\"http\");\nmodule.exports = class extends think.Service {\n    /**\n     * 解析微信登录用户数据\n     * @param sessionKey\n     * @param encryptedData\n     * @param iv\n     * @returns {Promise.<string>}\n     */\n    async decryptUserInfoData(sessionKey, encryptedData, iv) {\n        // base64 decode\n        const _sessionKey = Buffer.from(sessionKey, 'base64');\n        encryptedData = Buffer.from(encryptedData, 'base64');\n        iv = Buffer.from(iv, 'base64');\n        let decoded = '';\n        try {\n            // 解密\n            const decipher = crypto.createDecipheriv('aes-128-cbc', _sessionKey, iv);\n            // 设置自动 padding 为 true，删除填充补位\n            decipher.setAutoPadding(true);\n            decoded = decipher.update(encryptedData, 'binary', 'utf8');\n            decoded += decipher.final('utf8');\n            decoded = JSON.parse(decoded);\n        } catch (err) {\n            return '';\n        }\n        if (decoded.watermark.appid !== think.config('weixin.appid')) {\n            return '';\n        }\n        return decoded;\n    }\n    /**\n     * 统一下单\n     * @param payInfo\n     * @returns {Promise}\n     */\n    async createUnifiedOrder(payInfo) {\n        const WeiXinPay = require('weixinpay');\n        const weixinpay = new WeiXinPay({\n            appid: think.config('weixin.appid'), // 微信小程序appid\n            openid: payInfo.openid, // 用户openid\n            mch_id: think.config('weixin.mch_id'), // 商户帐号ID\n            partner_key: think.config('weixin.partner_key') // 秘钥\n        });\n        return new Promise((resolve, reject) => {\n            // let total_fee = this.getTotalFee(payInfo.out_trade_no);\n            weixinpay.createUnifiedOrder({\n                body: payInfo.body,\n                out_trade_no: payInfo.out_trade_no,\n                total_fee: payInfo.total_fee,\n                // total_fee: total_fee,\n                spbill_create_ip: payInfo.spbill_create_ip,\n                notify_url: think.config('weixin.notify_url'),\n                trade_type: 'JSAPI'\n            }, (res) => {\n                console.log(res);\n                if (res.return_code === 'SUCCESS' && res.result_code === 'SUCCESS') {\n                    const returnParams = {\n                        'appid': res.appid,\n                        'timeStamp': parseInt(Date.now() / 1000) + '',\n                        'nonceStr': res.nonce_str,\n                        'package': 'prepay_id=' + res.prepay_id,\n                        'signType': 'MD5'\n                    };\n                    const paramStr = `appId=${returnParams.appid}&nonceStr=${returnParams.nonceStr}&package=${returnParams.package}&signType=${returnParams.signType}&timeStamp=${returnParams.timeStamp}&key=` + think.config('weixin.partner_key');\n                    returnParams.paySign = md5(paramStr).toUpperCase();\n                    let order_sn = payInfo.out_trade_no;\n                    resolve(returnParams);\n                } else {\n                    reject(res);\n                }\n            });\n        });\n    }\n    async getTotalFee(sn) {\n        let total_fee = await this.model('order').where({\n            order_sn: sn\n        }).field('actual_price').find();\n        let res = total_fee.actual_price;\n        return res;\n    }\n    /**\n     * 生成排序后的支付参数 query\n     * @param queryObj\n     * @returns {Promise.<string>}\n     */\n    buildQuery(queryObj) {\n        const sortPayOptions = {};\n        for (const key of Object.keys(queryObj).sort()) {\n            sortPayOptions[key] = queryObj[key];\n        }\n        let payOptionQuery = '';\n        for (const key of Object.keys(sortPayOptions).sort()) {\n            payOptionQuery += key + '=' + sortPayOptions[key] + '&';\n        }\n        payOptionQuery = payOptionQuery.substring(0, payOptionQuery.length - 1);\n        return payOptionQuery;\n    }\n    /**\n     * 对 query 进行签名\n     * @param queryStr\n     * @returns {Promise.<string>}\n     */\n    signQuery(queryStr) {\n        queryStr = queryStr + '&key=' + think.config('weixin.partner_key');\n        const md5 = require('md5');\n        const md5Sign = md5(queryStr);\n        return md5Sign.toUpperCase();\n    }\n    /**\n     * 处理微信支付回调\n     * @param notifyData\n     * @returns {{}}\n     */\n    payNotify(notifyData) {\n        if (think.isEmpty(notifyData)) {\n            return false;\n        }\n        const notifyObj = {};\n        let sign = '';\n        for (const key of Object.keys(notifyData)) {\n            if (key !== 'sign') {\n                notifyObj[key] = notifyData[key][0];\n            } else {\n                sign = notifyData[key][0];\n            }\n        }\n        if (notifyObj.return_code !== 'SUCCESS' || notifyObj.result_code !== 'SUCCESS') {\n            return false;\n        }\n        const signString = this.signQuery(this.buildQuery(notifyObj));\n        if (think.isEmpty(sign) || signString !== sign) {\n            return false;\n        }\n        let timeInfo = notifyObj.time_end;\n        let pay_time = moment(timeInfo, 'YYYYMMDDHHmmss');\n        notifyObj.time_end = new Date(Date.parse(pay_time)).getTime() / 1000\n        return notifyObj;\n    }\n    /**\n     * 申请退款\n     * @param refundInfo\n     * @returns {Promise}\n     */\n    createRefund(payInfo) {\n        const WeiXinPay = require('weixinpay');\n        const weixinpay = new WeiXinPay({\n            appid: think.config('weixin.appid'), // 微信小程序appid\n            openid: payInfo.openid, // 用户openid\n            mch_id: think.config('weixin.mch_id'), // 商户帐号ID\n            partner_key: think.config('weixin.partner_key') // 秘钥\n        });\n        return new Promise((resolve, reject) => {\n            weixinpay.createUnifiedOrder({\n                body: payInfo.body,\n                out_trade_no: payInfo.out_trade_no,\n                total_fee: payInfo.total_fee,\n                spbill_create_ip: payInfo.spbill_create_ip,\n                notify_url: think.config('weixin.notify_url'),\n                trade_type: 'JSAPI'\n            }, (res) => {\n                if (res.return_code === 'SUCCESS' && res.result_code === 'SUCCESS') {\n                    const returnParams = {\n                        'appid': res.appid,\n                        'timeStamp': parseInt(Date.now() / 1000) + '',\n                        'nonceStr': res.nonce_str,\n                        'package': 'prepay_id=' + res.prepay_id,\n                        'signType': 'MD5'\n                    };\n                    const paramStr = `appId=${returnParams.appid}&nonceStr=${returnParams.nonceStr}&package=${returnParams.package}&signType=${returnParams.signType}&timeStamp=${returnParams.timeStamp}&key=` + think.config('weixin.partner_key');\n                    returnParams.paySign = md5(paramStr).toUpperCase();\n                    resolve(returnParams);\n                } else {\n                    reject(res);\n                }\n            });\n        });\n    }\n    async getAccessToken() {\n        const options = {\n            method: 'POST',\n            // url: 'https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=',\n            url: 'https://api.weixin.qq.com/cgi-bin/token',\n            qs: {\n                grant_type: 'client_credential',\n                secret: think.config('weixin.secret'),\n                appid: think.config('weixin.appid')\n            }\n        };\n        let sessionData = await rp(options);\n        sessionData = JSON.parse(sessionData);\n        let token = sessionData.access_token;\n        return token;\n    }\n    async getSelfToken(params) {\n        var key = ['meiweiyuxianmeiweiyuxian', params.timestamp, params.nonce].sort().join('');\n        //将token （自己设置的） 、timestamp（时间戳）、nonce（随机数）三个参数进行字典排序\n        var sha1 = crypto.createHash('sha1');\n        //将上面三个字符串拼接成一个字符串再进行sha1加密\n        sha1.update(key);\n        //将加密后的字符串与signature进行对比，若成功，返回success。如果通过验证，则，注释掉这个函数\n        let a = sha1.digest('hex');\n        let b = params.signature;\n        if (a == b) {\n            return true;\n        }\n    }\n    async sendMessage(token, data) {\n        const sendInfo = {\n            method: 'POST',\n            url: 'https://api.weixin.qq.com/cgi-bin/message/subscribe/send?access_token=' + token,\n            body: data,\n            json: true\n        };\n        let posting = await rp(sendInfo);\n        console.log(posting);\n        return posting;\n    }\n    async getMessageATempId(type) {\n        switch (type) {\n            case 1:\n                return 'TXWzXjO4C0odXCwQk4idgBtGcgSKBEWXJETYBZcRAzE';\n                break;\n                // 支付成功\n            case 2:\n                return 'COiQGBTzTtz_us5qYeJf0K-pFAyubBuWQh40sV1eAuw';\n                break;\n                // 发货通知\n            default:\n                return '400';\n        }\n    }\n    async getMessageTempId(type) {\n        switch (type) {\n            case 1:\n                return 'TXWzXjO4C0odXCwQk4idgBtGcgSKBEWXJETYBZcRAzE';\n                break;\n                // 支付成功\n            case 2:\n                return 'COiQGBTzTtz_us5qYeJf0K-pFAyubBuWQh40sV1eAuw';\n                break;\n                // 发货通知\n            default:\n                return '400';\n        }\n    }\n    async sendTextMessage(data, access_token) {\n        const sendInfo = {\n            method: 'POST',\n            url: 'https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=' + access_token,\n            body: {\n                touser: data.FromUserName,\n                msgtype: \"text\",\n                text: {\n                    content: data.Content\n                }\n            },\n            json: true\n        };\n        let posting = await rp(sendInfo);\n        return posting;\n    }\n    async sendImageMessage(media_id, data, access_token) {\n        const sendInfo = {\n            method: 'POST',\n            url: 'https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=' + access_token,\n            body: {\n                touser: data.FromUserName,\n                msgtype: \"image\",\n                image: {\n                    media_id: media_id\n                }\n            },\n            json: true\n        };\n        let posting = await rp(sendInfo);\n        return posting;\n    }\n};"
    ]
}